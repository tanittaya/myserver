"use strict";
import express, { Request, Response } from 'express';
import { Utils } from './Utils'; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Utils ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô calculate

const app = express();
const port = 3000;

app.get('/', async (req: Request, res: Response) => {
    try {
        const meal1 = parseInt(req.query.meal1 as string); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà 1
        const meal2 = parseInt(req.query.meal2 as string); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà 2
        const meal3 = parseInt(req.query.meal3 as string); // ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏à‡∏≤‡∏Å‡∏°‡∏∑‡πâ‡∏≠‡∏ó‡∏µ‡πà 3

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (isNaN(meal1) || isNaN(meal2) || isNaN(meal3)) {
            res.send("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏°‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
            return;
        }

        const dailyCalorieRequirement = 2200;
        const totalCalories = meal1 + meal2 + meal3;
        let resultMessage = "";

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
        if (totalCalories > dailyCalorieRequirement) {
            const excessCalories = totalCalories - dailyCalorieRequirement;
            resultMessage = `‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏°‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ${excessCalories} ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‚òπÔ∏è`;
        } else if (totalCalories < dailyCalorieRequirement) {
            const missingCalories = dailyCalorieRequirement - totalCalories;
            resultMessage = `‡∏Ñ‡∏∏‡∏ì‡∏Ç‡∏≤‡∏î‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏≠‡∏µ‡∏Å ${missingCalories} ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πàü§§`;
        } else {
            resultMessage = "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ßüòÄ";
        }

        // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡πâ‡∏ß‡∏¢ calculate (‡πÉ‡∏ä‡πâ async/await)
        const testResult = await Utils.calculate(meal1, meal2, meal3);
        let testMessage = "";
        if (testResult === 0) {
            testMessage = "Test passed!";
        } else {
            testMessage = `Test failed! Expected 0, but got ${testResult}`;
        }

        // ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
        res.send(`
            <h1>*---‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢---*<h1>
            <h4>üçû‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ ‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠ 2200 Kcal ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ôü•õüí™üèª<h4>
        <h2>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÉ‡∏ô1‡∏ß‡∏±‡∏ô‡∏Ç‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢ </h2>
            <p>${resultMessage}</p>
            <h2>‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏Ñ‡∏•‡∏•‡∏≠‡∏£‡∏µ‡πà </h2>
            <p>${testMessage}</p>
        `);
    } catch (error: any) {
        res.status(500).send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + (error?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏î‡πâ"));
    }
});

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
app.listen(port, () => {
    console.log('Server is running on port ' + port);
});
